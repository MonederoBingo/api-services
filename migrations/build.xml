<?xml version="1.0"?>
<project name="lealpoints_master" default="all">
    <property environment="env" />
    <property name="build" value="target/classes"/>
    <property name="src.migrations.util" value="src/main/java/com/lealpoints/migrations/util"/>
    <property name="src.migrations.db" value="src/main/java/com/lealpoints/migrations/db"/>
    <property name="src.migrations" value="src/main/java/com/lealpoints/migrations"/>

    <path id="classpath">
        <fileset dir="${env.MAVEN_REPOSITORY}">
            <include name="**/*.jar" />
        </fileset>
    </path>

    <target name="init">
        <tstamp/>
    </target>
    <target name="maven-windows" depends="maven.properties" if="isWindows">
        <property name="runFrom" value="${basedir}"/>
        <exec executable="cmd.exe" dir="${runFrom}" failonerror="true" resultproperty="exec.return.code">
            <arg value="/c mvn.bat ${options} ${target}"/>
        </exec>
        <condition property="maven.failed">
            <not>
                <equals arg1="${exec.return.code}" arg2="0"/>
            </not>
        </condition>
        <fail if="maven.failed" message="Maven build failed."/>
    </target>
    <!-- Maven delegation helper tasks -->
    <target name="maven.properties">
        <condition property="isWindows">
            <os family="windows"/>
        </condition>
    </target>
    <target name="maven-unix" depends="maven.properties" unless="isWindows">
        <property name="runFrom" value="${basedir}"/>
        <exec executable="mvn" dir="${runFrom}" failonerror="true" resultproperty="exec.return.code">
            <arg line="${options}"/>
            <arg value="${target}"/>
        </exec>
        <condition property="maven.failed">
            <not>
                <equals arg1="${exec.return.code}" arg2="0"/>
            </not>
        </condition>
        <fail if="maven.failed" message="Maven build failed."/>
    </target>
    <target name="maven" depends="maven-windows, maven-unix"/>
    <target name="maven.build" depends="init">
        <antcall target="maven">
            <param name="target" value="install"/>
            <param name="options" value="-Dmaven.test.skip=true"/>
        </antcall>
    </target>
    <target name="all" depends="init" description="Builds all our sub-projects in order.">
        <antcall target="maven.build"/>
        <tstamp>
            <format property="buildtime" pattern="yyyy-MM-dd'T'HH:mm:ss"/>
        </tstamp>
        <echo message="Finished build at ${buildtime}"/>
    </target>
    <target name="compile" depends="init" description="Builds sub-project">
        <!--<javac srcdir="${src.migrations.util}" destdir="${build}" includeantruntime="false" classpathref="classpath" />--><!--<javac srcdir="${src.migrations.db}" destdir="${build}" includeantruntime="false" classpathref="classpath" />--><!--<javac srcdir="${src.migrations}" destdir="${build}" includeantruntime="false" classpathref="classpath" />-->
    </target>
    <target name="createdb" description="Creates the database" depends="compile">
        <echo message="  *** THIS WILL DROP THE LOCALHOST COPY OF YOUR EXISTING DATABASE! ***  "/>
        <input message="Agree on drop and create db? (y/n): " addproperty="agree_on_createdb_yn" validargs="y,n"
               defaultvalue="n"/>
        <condition property="agree_on_createdb">
            <and>
                <isset property="agree_on_createdb_yn"/>
                <equals arg1="${agree_on_createdb_yn}" arg2="y"/>
            </and>
        </condition>
        <antcall target="drop_and_create_db"></antcall>
    </target>
    <target name="drop_and_create_db" description="Creates the database" depends="compile" if="agree_on_createdb">
        <java classname="com.lealpoints.migrations.CreateDb" classpathref="classpath"/>
    </target>
    <target name="migrate" description="Updates the database" depends="compile">
        <java classname="com.lealpoints.migrations.Migrate" classpathref="classpath"/>
    </target>
    <target name="prod_migrate" description="Updates the database" depends="compile">
        <java classname="com.lealpoints.migrations.MigrateProduction" classpathref="classpath"/>
    </target>
    <target name="create-migration" description="Creates a new file into migrations directory" depends="compile">
        <javac srcdir="${src.migrations}/util" destdir="${build}" classpathref="classpath"/>
        <taskdef name="slugifytask" classname="com.lealpoints.migrations.util.SlugifyTask"
                 classpathref="classpath"/>
        <input message="Type a short description of what migration does: " addproperty="migration.description"/>
        <slugifytask string="${migration.description}" propertyName="migration.description.slug"/>
        <tstamp>
            <format property="migration.prefix" pattern="yyyyMMddHHmmss"/>
        </tstamp>

        <property name="migration.filename" value="${migration.prefix}_${migration.description.slug}.sql"/>
        <touch file="src/main/resources/scripts/migrations/${migration.filename}"/>
        <echo>File ${migration.filename} was created!</echo>
    </target>
    <target name="clean">
        <delete dir="${build}"/>
    </target>
</project>